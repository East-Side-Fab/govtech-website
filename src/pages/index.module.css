.hero {
    position: relative;
    width: 100%;
    min-height: 80vh;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
}

.gridOverlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image:
        linear-gradient(to right, var(--grid-line) 1px, transparent 1px),
        linear-gradient(to bottom, var(--grid-line) 1px, transparent 1px);
    background-size: 40px 40px;
    z-index: 1;
}

.gridOverlay::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(
        circle at center,
        transparent 0%,
        var(--ifm-background-color) 80%
    );
    z-index: 2;
}

.heroContent {
    position: relative;
    z-index: 3;
    text-align: center;
    padding: 2rem;
    max-width: 800px;
}

.heroContent h1 {
    font-size: 4rem;
    margin-bottom: 1rem;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    font-weight: 700;
}

.heroTagline {
    font-size: 1.5rem;
    margin-bottom: 2rem;
    color: var(--ifm-color-primary);
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
}

.bracket {
    font-size: 2rem;
    color: var(--ifm-color-secondary);
    font-weight: bold;
}

.taglineText {
    font-family: var(--ifm-font-family-base);
    letter-spacing: 0.05em;
}

.heroButtons {
    display: flex;
    gap: 1rem;
    justify-content: center;
    margin-top: 2rem;
}

.primaryBtn,
.secondaryBtn {
    position: relative;
    padding: 0.75rem 1.5rem;
    font-family: var(--ifm-font-family-base);
    font-size: 1rem;
    border: 1px solid;
    background-color: var(--btn-primary-bg);
    cursor: pointer;
    overflow: hidden;
    transition: all 0.3s ease;
    border-radius: 4px;
}

.primaryBtn {
    border-color: var(--btn-primary-border);
    color: var(--btn-primary-text);
}

.secondaryBtn {
    border-color: var(--btn-secondary-border);
    color: var(--btn-secondary-text);
}

.primaryBtn:hover,
.secondaryBtn:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

.primaryBtn:hover {
    background-color: rgba(34, 211, 238, 0.1);
}

.secondaryBtn:hover {
    background-color: rgba(124, 58, 237, 0.1);
}

.btnGlow {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(
        circle at center,
        var(--glow-primary) 0%,
        transparent 70%
    );
    opacity: 0;
    transition: opacity 0.3s ease;
}

.primaryBtn:hover .btnGlow {
    opacity: 0.5;
}

/* Main content area */
.mainContent {
    position: relative;
    z-index: 2;
    padding: 2rem 1rem;
    max-width: 1200px;
    margin: 0 auto;
}

/* Terminal section */
.terminalSection {
    margin: 3rem 0;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
    background-color: var(--terminal-bg);
    border: 1px solid var(--card-border);
}

.terminalHeader {
    display: flex;
    align-items: center;
    padding: 0.75rem 1rem;
    background-color: rgba(0, 0, 0, 0.3);
    border-bottom: 1px solid var(--card-border);
}

.terminalControls {
    display: flex;
    gap: 0.5rem;
}

.terminalCircle {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: #f87171;
}

.terminalCircle:nth-child(2) {
    background-color: #fbbf24;
}

.terminalCircle:nth-child(3) {
    background-color: #34d399;
}

.terminalTitle {
    margin-left: auto;
    font-size: 0.875rem;
    color: var(--ifm-font-color-secondary);
}

.terminal {
    padding: 1.5rem;
    font-family: "JetBrains Mono", monospace;
    font-size: 0.9rem;
    line-height: 1.6;
}

.terminalLine {
    margin-bottom: 0.5rem;
    opacity: 0;
    transform: translateY(10px);
    transition:
        opacity 0.3s ease,
        transform 0.3s ease;
}

.terminalLine.visible {
    opacity: 1;
    transform: translateY(0);
}

.prompt {
    color: var(--terminal-prompt);
    margin-right: 0.75rem;
}

.comment {
    color: var(--terminal-comment);
}

.output {
    color: var(--terminal-output);
    display: block;
    padding-left: 1.5rem;
    margin-top: 0.5rem;
}

/* Code section */
.codeSection {
    margin: 4rem 0;
    display: flex;
    flex-direction: column;
    gap: 2rem;
}

.sectionTitle {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    color: var(--ifm-color-primary);
}

.codeComment {
    color: var(--code-comment);
}

.codeFunction {
    color: var(--code-function);
}

.stringValue {
    color: var(--code-string);
}

.sectionSubtitle {
    font-size: 1.5rem;
    margin-bottom: 2rem;
    color: var(--ifm-heading-color);
}

.sectionText {
    margin-bottom: 1.5rem;
    line-height: 1.6;
    color: var(--ifm-font-color-base);
}

.codeSnippetContainer {
    margin: 2rem 0;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.4);
}

/* Where section with coordinates */
.whereSection {
    margin: 4rem 0;
    border-radius: 8px;
    background-color: var(--card-bg);
    border: 1px solid var(--card-border);
    padding: 2rem;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.3);
}

.whereContent {
    position: relative;
}

.whereData {
    display: flex;
    flex-wrap: wrap;
    gap: 2rem;
    margin: 2rem 0;
}

.whereCoordinates {
    flex: 1;
    min-width: 300px;
}

.coordinate {
    display: flex;
    margin-bottom: 1rem;
    font-family: "JetBrains Mono", monospace;
}

.coordLabel {
    width: 80px;
    color: var(--code-keyword);
}

.coordValue {
    color: var(--code-variable);
}

.coordinateName {
    margin-top: 1rem;
    border-top: 1px dashed var(--card-border);
    padding-top: 1rem;
    display: flex;
}

.whereMap {
    flex: 1;
    min-width: 300px;
    min-height: 250px;
}

.mapPlaceholder {
    position: relative;
    width: 100%;
    height: 250px;
    background-color: rgba(0, 0, 0, 0.3);
    border-radius: 4px;
    overflow: hidden;
}

.mapGrid {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image:
        linear-gradient(to right, var(--grid-line) 1px, transparent 1px),
        linear-gradient(to bottom, var(--grid-line) 1px, transparent 1px);
    background-size: 20px 20px;
}

.mapPin {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 20px;
    height: 20px;
    background-color: var(--ifm-color-primary);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    box-shadow: 0 0 15px var(--glow-primary);
    animation: pulse 2s infinite;
}

@keyframes pulse {
    0% {
        box-shadow: 0 0 0 0 rgba(34, 211, 238, 0.7);
    }
    70% {
        box-shadow: 0 0 0 10px rgba(34, 211, 238, 0);
    }
    100% {
        box-shadow: 0 0 0 0 rgba(34, 211, 238, 0);
    }
}

/* Challenges section */
.challengesSection {
    margin: 4rem 0;
}

.challengeCards {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 2rem;
    margin-top: 2rem;
}

.challengeCard {
    background-color: var(--card-bg);
    border: 1px solid var(--card-border);
    border-radius: 8px;
    padding: 2rem;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
}

.challengeCard:hover {
    transform: translateY(-5px);
    border-color: var(--card-hover-border);
    box-shadow:
        0 10px 25px rgba(0, 0, 0, 0.3),
        0 0 15px var(--glow-primary);
}

.cardIcon {
    font-size: 2.5rem;
    margin-bottom: 1rem;
}

.challengeCard h3 {
    margin-bottom: 1rem;
    color: var(--ifm-color-primary);
}

.challengeCard p {
    color: var(--ifm-font-color-secondary);
    line-height: 1.5;
}

/* CTA section */
.ctaSection {
    position: relative;
    margin: 6rem 0 3rem;
    padding: 3rem;
    border-radius: 8px;
    background-color: var(--card-bg);
    border: 1px solid var(--card-border);
    overflow: hidden;
    text-align: center;
}

.ctaGlow {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 300px;
    height: 300px;
    background: radial-gradient(
        circle,
        var(--glow-primary) 0%,
        transparent 70%
    );
    opacity: 0.2;
    z-index: 0;
    pointer-events: none;
}

.ctaTitle {
    position: relative;
    z-index: 1;
    text-align: left;
}

.ctaText {
    position: relative;
    z-index: 1;
    margin: 2rem 0;
    max-width: 700px;
    margin-left: auto;
    margin-right: auto;
    text-align: left;
    padding-left: 2rem;
}

.ctaButtonContainer {
    position: relative;
    z-index: 1;
    margin: 2rem 0;
}

.ctaButton {
    padding: 1rem 2rem;
    font-family: var(--ifm-font-family-base);
    font-size: 1.2rem;
    background-color: transparent;
    border: 2px solid var(--ifm-color-primary);
    color: var(--ifm-color-primary);
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 0 15px rgba(34, 211, 238, 0.2);
}

.ctaButton:hover {
    background-color: rgba(34, 211, 238, 0.1);
    transform: translateY(-2px);
    box-shadow: 0 0 20px rgba(34, 211, 238, 0.4);
}

.btnIcon {
    margin-right: 0.5rem;
    font-weight: bold;
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .heroContent h1 {
        font-size: 2.5rem;
    }

    .heroTagline {
        font-size: 1.2rem;
    }

    .sectionTitle {
        font-size: 2rem;
    }

    .sectionSubtitle {
        font-size: 1.2rem;
    }

    .whereData {
        flex-direction: column;
    }

    .ctaSection {
        padding: 2rem 1rem;
    }
}
